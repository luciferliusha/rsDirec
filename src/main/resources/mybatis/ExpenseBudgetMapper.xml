<?xml version="1.0" encoding="GBK"?>  <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.zjcds.xa.dao.IExpenseBudgetDao"> 
   <!--   <resultMap type="HashMap" id="expenseBudget">
		<id column="id" property="id"/>
		<result column="ld" property="ld"/>
		<result column="xmmc" property="xmmc"/>
		<result column="shuliang" property="shuliang"/>
		<result column="qd_zh" property="qd_zh"/>
		<result column="zd_zh" property="zd_zh"/>
		<result column="wh_lc" property="wh_lc"/>
		<result column="tr_yxsj" property="tr_yxsj"/>
		<result column="nx" property="nx"/>
		<result column="nx_tzxs" property="nx_tzxs"/>
		<result column="sd_jkxs" property="sd_jkxs"/>
		<result column="tbr" property="tbr"/>
		<result column="tbsj" property="tbsj"/>
		<result column="beizhu" property="beizhu"/>
		<result column="xtmc" property="xtmc"/>
		<result column="fyxj" property="fyxj"/>
	</resultMap> -->
    <resultMap type="HashMap" id="SfXmResult">
		<id column="sf_xm_id" property="sf_xm_id"/>
		<result column="sf_xm_name" property="sf_xm_name"/>
		<result column="dw" property="dw"/>
		<result column="jijia" property="jijia"/>
		<result column="jsgs" property="jsgs"/>
		<result column="beizhu" property="beizhu"/>
	</resultMap>
	<resultMap type="HashMap" id="sf_xs_nxResult">
		<id column="xs_id" property="xs_id"/>
		<result column="xs_nx" property="xs_nx"/>
		<result column="xs" property="xs"/>
		<result column="xs_spzt" property="xs_spzt"/>
		<result column="yxzt" property="yxzt"/>
	</resultMap>
	<resultMap type="HashMap" id="sf_xs_cdResult">
		<id column="cd_id" property="cd_id"/>
		<result column="xs_cd" property="xs_cd"/>
		<result column="xs" property="xs"/>
		<result column="xs_spzt" property="xs_spzt"/>
		<result column="yxzt" property="yxzt"/>
	</resultMap>
	<resultMap type="HashMap" id="ldResult">
		<id column="ld_id" property="ld_id"/>
		<result column="ld_mc" property="ld_mc"/>
		<result column="GROUP_NAME" property="GROUP_NAME"/>
		<result column="group_id" property="group_id"/>
	</resultMap>
    
    <select id="getLdByGroupid" parameterType="String" resultMap="ldResult">
	    select * from ld where  group_id=#{groupid}  </select> 
      
	<select id="getSfXmByLd" parameterType="String" resultMap="SfXmResult">
	    select * from sf_xm_dict where  sf_xm_name=#{sf_xm_name}  </select> 
	<select id="getSfXsNx" parameterType="String" resultMap="sf_xs_nxResult">  
	    select * from (select t.*,
		       substr(xs_nx, 1, instr(t.xs_nx, '&lt;=', 1) - 1) smaller,
		       (case (substr(xs_nx, instr(t.xs_nx, '&lt;=', -1) + 2, length(xs_nx)))
		         when 'α' then
		          '100'
		         else
		          (substr(xs_nx, instr(t.xs_nx, '&lt;=', -1) + 2, length(xs_nx)))
		       end) bigger 
		  from SF_XS_NX t where t.xs_spzt=1 and t.yxzt=1) where #{xs_nx}&gt;=smaller and #{xs_nx}&lt;=bigger
	    
	    </select> 
	<select id="getSfXsCd" parameterType="String" resultMap="sf_xs_cdResult">
	    select *
		  from (select t.*,
		               (to_number(case
		                 when instr(t.XS_CD, 'β', 1) = 1 then
		                  '0'
		                 else
		                  substr(XS_CD, 1, instr(t.XS_CD, '&lt;', 1, 1) - 1)
		               end))+1 smaller,
		               to_number(case
		                (case instr(XS_CD, '&lt;=', 1)
		                   when 0 then
		                    (substr(XS_CD, instr(t.XS_CD, '&lt;', 1) + 1, length(XS_CD)))
		                   else
		                    (substr(XS_CD, instr(t.XS_CD, '&lt;=', 1) + 2, length(XS_CD)))
		                 end)
		                 when 'β' then
		                  '100000000000'
		                 else
		                  (case instr(XS_CD, '&lt;=', 1)
		                    when 0 then
		                     (substr(XS_CD,
		                             instr(t.XS_CD, '&lt;', 1) + 1,
		                             length(XS_CD)))
		                    else
		                     (substr(XS_CD,
		                             instr(t.XS_CD, '&lt;=', 1) + 2,
		                             length(XS_CD)))
		                  end)
		               end) bigger
		          from SF_XS_cd t
		         where t.xs_spzt = 1
		           and t.yxzt = 1)
		 where #{xs_cd}&gt;= smaller
		   and #{xs_cd}&lt;= bigger
	    
	    </select>  
	<select id="getLd" parameterType="String" resultMap="ldResult">
	    select * from ld where groupid=#{groupid}  </select> 
	<select id="getExpenseBudgetByParams" parameterType="HashMap" resultType="com.zjcds.xa.bean.ExpenseBudgetBean">
	    select * from expense_budget where tbr=#{user}  
	    <if test="ld !=null and ld !=''">
	    and ld=#{ld}
	    </if>    
	    <if test="tbsj !=null and tbsj !=''">
	    and to_char(t.tbsj,'yyyy')=#{tbsj}
	    </if> 
	    <if test="ld !=null and ld !=''">
	    and sh_zt=#{sh_zt,jdbcType=INTEGER}
	    </if> 
	</select>    
	 <select id="getExpenseBudgetTongji"  parameterType="HashMap" resultType="HashMap">
	    select distinct to_char(t.tbsj, 'yyyy') year, t.ld ldmc, t.sh_zt zt,
	    (select sum(fyxj)  from expense_budget  where xtmc = '收费系统' and ld=t.ld) sfxt,
        (select sum(fyxj)  from expense_budget  where xtmc = '通信系统' and ld=t.ld) txxt,
        (select sum(fyxj)  from expense_budget  where xtmc = '监控系统' and ld=t.ld) jkxt,
         (select sum(fyxj)  from expense_budget  where xtmc = '供配电与照明系统' and ld=t.ld) zmxt,
        (select sum(fyxj)  from expense_budget  where xtmc = '隧道系统' and ld=t.ld) sdxt
	    
			  from expense_budget t where tbr=#{user} 
              <if test="ld !=null and ld !=''">
			    and ld=#{ld}
			    </if>    
			    <if test="tbsj !=null and tbsj !=''">
			    and to_char(t.tbsj,'yyyy')=#{tbsj}
			    </if> 
			    <if test="ld !=null and ld !=''">
			    and sh_zt=#{sh_zt,jdbcType=INTEGER}
			    </if> 
			 group by t.ld, t.fyxj,t.sh_zt, to_char(t.tbsj, 'yyyy')  
	 </select>
	    <select id="getExpenseBudgetCount"  resultType="int">
	    select count(2) from expense_budget  </select>   
	  
	  
	<insert id="insertExpenseBudget" parameterType="com.zjcds.xa.bean.ExpenseBudgetBean">
	    insert into EXPENSE_BUDGET(
			  id,
			  ld,
			  shuliang ,
			  qd_zh,
			  zd_zh,
			  wh_lc,
			  tr_yxsj,
			  nx,
			  nx_tzxs,
			  sd_jkxs,
			  tbr,
			  beizhu,
			  tbsj,
			  xmmc,
			  xtmc,
			  fyxj,
			  update_flag
			)values(
			  SQ_EXPENSE_BUDGET.Nextval,
			  #{ld},
			  #{shuliang} ,
			  #{qd_zh},
			  #{zd_zh},
			  #{wh_lc},
			  #{tr_yxsj},
			  #{nx},
			  #{nx_tzxs},
			  #{sd_jkxs},
			  #{tbr},
			  #{beizhu},
			  sysdate,
			  #{xmmc},
			  #{xtmc},
			  #{fyxj},
			  #{update_flag}
			)  
	 </insert>   
	 <update id="updateExpenseBudget" parameterType="HashMap">
	    update EXPENSE_BUDGET set 
	        ld=#{ld},
	        shuliang=#{shuliang} ,
	        qd_zh=#{qd_zh},
	        zd_zh=#{zd_zh},
	        wh_lc=#{wh_lc},
	        tr_yxsj=#{tr_yxsj},
	        nx=#{nx},
	        nx_tzxs=#{nx_tzxs},
	        sd_jkxs=#{sd_jkxs},
	        beizhu=#{beizhu},
	        fyxj=#{fyxj},
	        fyxj=#{update_flag}
        where where id=#{id}    
	 </update>
     
</mapper>
